{
  "$schema": "http://json-schema.org/schema#",
  "description": "AbstractJsonClass schema. This describes the base schema for subclasses of AbstractJsonClass. All supporting files (internationalization messages, images, etc.) should be contained within the class's subdirectory. For consistency, many fields use the same names as the extension.json schema. However, only a limited subset of these fields are currently supported.",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "id": {
      "type": "string",
      "description": "The id of the class. This must be unique across all registered classes for this schema. If not specified, will default to the class name (without the namespace)."
    },
    "class": {
      "type": "string",
      "description": "The full class name (including namespace)",
      "required": true
    },
    "classfile": {
      "type": "string",
      "description": "The relative path to the class php file. If not specified, will default to the class name (without the namespace) in the same directory as the json definition."
    },
    "version": {
      "type": "string",
      "description": "The version of the class."
    },
    "author": {
      "type": [
        "string",
        "array"
      ],
      "description": "The class's authors.",
      "items": {
        "type": "string"
      },
      "default": ""
    },
    "name": {
      "type": "string",
      "description": "Raw display name of the class. If not specified, this will default to the class name."
    },
    "namemsg": {
      "type": "string",
      "description": "i18n message key of the class display name. If not specified, will attempt to use the message key \"JSONCLASSNAME-CLASSID-name\". If a valid message is defined, this will take precedence over the value of \"name\"."
    },
    "description": {
      "type": "string",
      "description": "Raw description of the class."
    },
    "descriptionmsg": {
      "type": "string",
      "description": "i18n message key of the class's description. If not specified, will attempt to use the message key \"JSONCLASSNAME-CLASSID-desc\". If a valid message is defined, this will take precedence over the value of \"description\"."
    },
    "config": {
      "type": "object",
      "description": "Configuration options for this class. Unlike the extension.json definition of this field, this should be a simple object with the variable names as properties and default values as values.",
      "items": {
        "type": "string"
      }
    },
    "AutoloadClasses": {
      "type": "object",
      "description": "A list of classes and files to autoload. This should be a simple object with the class name as properties and the local path to the class files function as values.",
      "items": {
        "type": "string"
      }
    },
    "AutoloadNamespaces": {
      "type": "object",
      "description": "Array containing mapping of namespaces to directories in a PSR-4 compatible manner.",
      "items": {
        "type": "string"
      }
    },
    "AvailableRights": {
      "type": "array",
      "description": "User rights added by the class.",
      "items": {
        "type": "string"
      }
    },
    "GroupPermissions": {
      "type": "object",
      "description": "Default permissions to give to usergroup. This should be a two dimensional object with the usergroup as the first dimension's properties, the rights as the second dimension, and a boolean to grant or deny the right as values.",
      "items": {
        "type": "object"
      }
    },
    "Hooks": {
      "type": "object",
      "description": "A list of MediaWiki hooks for this class. This should be a simple object with the hook as properties and the callback function as values.",
      "items": {
        "type": "string"
      }
    },
    "MessagesDirs": {
      "type": "array",
      "description": "Directory paths containing JSON internationalization data. Unlike the extension.json definition of this field, this should be a simple array of paths relative to the class's root directory.",
      "items": {
        "type": "string"
      }
    },
    "ResourceModules": {
      "type": "object",
      "description": "ResourceModules to register",
      "items": {
        "type": "object"
      }
    },
    "ResourceFileModulePaths": {
      "type": "object",
      "description": "Specifies the default paths to use for all ResourceLoader file modules.",
      "additionalProperties": false,
      "properties": {
        "localBasePath": {
          "type": "string"
        },
        "remoteExtPath": {
          "type": "string"
        },
        "remoteSkinPath": {
          "type": "string"
        }
      }
    }
  }
}